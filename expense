#!/usr/bin/env python

from contextlib import contextmanager 
from datetime import date
from textwrap import dedent
import sys

import psycopg2
from psycopg2 import extras

class CLI:
    def __init__(self):
        self.application = ExpenseData()
    def run(self, my_list):
        if not my_list:
            self.display_help()
        elif my_list[0] == 'add' and len(my_list) == 1:
            print("You must provide an amount and memo.")
        elif my_list[0] == 'list':
            self.application.list_expenses()
        elif len(my_list) >= 3:
            amount = my_list[1]
            memo = my_list[2]
            self.application.add_expense(amount, memo)

    def display_help(self):
        print(dedent("""
            An expense recording system

            Commands:

            add AMOUNT MEMO - record a new expense
            clear - delete all expenses
            list - list all expenses
            delete NUMBER - remove expense with id NUMBER
            search QUERY - list expenses with a matching memo field
    """))

class ExpenseData:
    # def __init__(self):
    #     self.connection = psycopg2.connect(dbname='expenses')

    @contextmanager
    def _database_connect(self, dbname='expenses'):
        connection = psycopg2.connect(dbname)
        try:
            yield connection
        finally:
            connection.close()
    
    def list_expenses(self):
        with self._database_connect as my_connection:
            with my_connection.cursor(cursor_factory=extras.DictCursor) as cursor:
                cursor.execute("""SELECT * FROM expenses ORDER BY created_on DESC""")
                rows = cursor.fetchall()
        
        for row in rows:
            columns = [
                str(row['id']).rjust(3),
                str(row['created_on']),
                str(row['amount']).rjust(12),
                str(row['memo'])
            ]

            print(' | '.join(columns))

    def add_expense(self, amount, memo):
        with self._database_connect as my_connection:
            with my_connection.cursor() as cursor:
                cursor.execute("""INSERT INTO expenses (amount, memo, created_on) VALUES (%s, %s, %s)""", (amount, memo, date.today()))

if __name__ == '__main__':
    cli = CLI()
    cli.run(sys.argv[1:]) # [./expense, add 1.25 'Coffee']
